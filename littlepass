#!/usr/bin/env python

from optparse import OptionParser
import locale
import os
import random

# parse them options!
description = "Create passwords appropriate for little ones"
parser = OptionParser(description=description, version="0.1")
parser.add_option("-l", "--language", dest="lang",
                  help="specify the language to use")
parser.add_option("-i", "--interactive", action="store_true",
                  dest="interactive", default=False,
                  help="let the user pick the words used in their password")
(options, args) = parser.parse_args()

# get the user's language
locale.setlocale(locale.LC_ALL, '')
lang = options.lang or locale.getlocale()[0].split('_')[0]
defaultLang = 'en'

# find and read the language appropriate strings file
def findLangDir():
    # we'll for a directory in /usr/share/littlepass
    # then in <dir of script>/share
    langDir = '/usr/share/littlepass'

    if not os.path.isdir(langDir):
        langDir = os.path.join(os.path.dirname(__file__), 'share')
        if not os.path.isdir(langDir):
            return None

    return os.path.abspath(langDir)

# find the wordlist for the selected language
def findLangFile(langDir, lang, defaultLang):
    for l in lang, defaultLang:
        langFile = os.path.join(langDir, l + ".txt")
        if os.path.isfile(langFile):
            return langFile
        langFile += ".gz"
        if os.path.isfile(langFile):
            return langFile
    return None

def readWordList():
    p = findLangFile(findLangDir(), lang, defaultLang)
    if p == None:
        raise IOError, "I can't find a suitable wordlist!"
    contents = '';
    if p.endswith('.gz'):
        import gzip
        f = gzip.open(p, 'rb')
        contents = f.read()
        f.close()
    else:
        f = open(p, 'r')
        contents = f.read()
        f.close()

    return contents.split()

def genPass():
    wordlist = readWordList()
    pwelems = [ random.choice(wordlist), random.choice(wordlist), random.randint(10,99) ]
    random.shuffle(pwelems)
    return ''.join(map(str,pwelems))

def getWordInteractive(wordlist):
    choices = [ ]
    for i in range(4):
        word = random.choice(wordlist)
        choices.append(word)
        print str(i + 1) + ": " + word
    choice = raw_input("Pick a word: ").strip()
    if (choice in [ '1', '2', '3', '4']):
        return choices[int(choice) - 1]
    if (choice in choices):
        return choice
    print "Oops!  I don't know what '" + choice + "' means!"
    print ""
    print "Let's try again, pick a word by typing the number next to it:"
    return getWordInteractive(wordlist)

if options.interactive:
    pwelems = [ random.randint(10,99) ]
    wordlist = readWordList()
    print "Let's create a secret password that only you know!"
    print ""
    print "First, pick one of these four words:"
    pwelems.append(getWordInteractive(wordlist))
    print ""
    print "Great!  One more time, pick one of these four words:"
    pwelems.append(getWordInteractive(wordlist))
    random.shuffle(pwelems)
    print ""
    print "Awesome!  Your secret password is:"
    print ''.join(map(str,pwelems))
else:
    print genPass()
